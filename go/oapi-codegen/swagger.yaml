openapi: 3.0.3
info:
  title: Sample API
  version: 1.0.0
  description: API documentation example using OpenAPI 3.0
servers:
  - url: 'https://api.example.com'
paths:
  /orders/{order_id}:
    post:
      summary: Process an order
      description: >
        This endpoint processes a specific order, identified by `order_id`,
        with additional details provided in the request body.
      operationId: findOrders
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
        - in: query
          name: hoge
          schema:
            type: string
        - in: path
          name: order_id
          required: true
          schema:
            type: string
          description: The unique identifier of the order (e.g., 'abc-xxxx').
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: integer
                  minimum: 1
                  example: 1
                return_id:
                  type: integer
                  example: 1
      responses:
        '200':
          $ref: '#/components/responses/OrderResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
components:
  schemas:
    OrderRequest:
      type: object
      properties:
        project_id:
          type: integer
          x-go-type: int64
          minimum: 1
          example: 1
        return_id:
          type: integer
          example: 1
  requestBodies:
    OrderRequest:
      description: order api request
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              project_id:
                type: integer
                minimum: 1
                example: 1
              return_id:
                type: integer
                example: 1
  responses:
    OrderResponse:
      description: order api response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Order processed successfully
    BadRequestError:
      description: badrequest response
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Invalid input
